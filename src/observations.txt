OPTICAL NOTION 
The higher the field of view, the smaller objects will appear. 45o degrees FoV makes a cube looks larger then a 90o degrees FoV.

CAMERA
row, yaw and pitch: Are the axis (plane) that should rotate certain object.
Imagine an airplane:
pointing front (roll)
pointing east (pitch)
pointing down (yaw) 

GRAPHICS
MODELS are divided into units called MESHES (A section of the model)
So in a body, the Meshes could be the head, limbs and so on. 

MATRIX MATH
Matrix multiplication order for objects onto the screen
//position
//obj coords           placed in context           camera                what we see
//local   -----model----> world ------------view--> view ---projection--> clip   
//Multiplication must be transformation * model * position
//projection * view * model * position 
//transformation multiplication order is scale, rotate, translate 
Procurar sobre as matrizes de transformacao

Takes the normal vector and updates its position based on the possibly updated model position
Normal = mat3(transpose(inverse(model))) * aNormal; //Normal in world space
float diff = max(dot(norm, lightDir), 0.0); //when light is perpendicular to the normal, dot product is 0


cross function, to get the ortogonal vector between 2 vectors

.fs fragment shader
.vs vector shader


// VAO is the vertex array object, it stores the vertex attribute calls
// VBO is the vertex buffer object, it stores the vertex data
//EBO is the Element buffer object It's a type of buffer object that you can store indices in, which you can then use to render primitives in OpenGL.


//Optimization note
Usar O.O. eh mais facil de usar e implementar, mas para fins de otimizacao, eh recomendado usar Component Oriented Programming

//C++ tips
for(Mesh mesh : meshes){
        meshes.render(shader);
    }
for (tipo unidade: lista)
uso de for por lista parecido com Python
